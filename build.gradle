import net.masterthought.cucumber.Configuration
import net.masterthought.cucumber.ReportBuilder

apply plugin: 'java'
apply plugin: 'maven'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.bodar.com" }
    }

    dependencies {
        classpath 'net.masterthought:cucumber-reporting:3.17.1'
    }
}

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.12'

    // testng
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

    // https://mvnrepository.com/artifact/info.cukes/cucumber-java
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'

    // https://mvnrepository.com/artifact/org.testng/testng
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'

    // cucumber-java
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'

    // cucumber-testng
    testCompile group: 'info.cukes', name: 'cucumber-testng', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.2.5'
}


task runFeatures(type: Test) {
    // enable TestNG support (default is JUnit)
    useTestNG()

    options {
        jvmArgs = ['-Dcucumber.options= ' +
                           '--glue MyStepdefs ' +
                           '--plugin pretty ' +
                           '--plugin json:build/cucumber/cucumber.json ' +
                           '--plugin rerun:build/cucumber/rerun.txt ']
        jvmArgs = ['-Dbrowser=' + Browser]
    }

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // set JVM arguments for the test JVM(s)
    scanForTestClasses = false

    // Do not use the Gradle's HTML report:
    reports.html.enabled = false

    ignoreFailures = true

}




